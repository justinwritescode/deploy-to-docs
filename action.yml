# This workflow copies the docs subfolder from another repo into the docs/reponame subfolder of this repo

name: justinwritescode docs cd
description: This workflow copies the docs subfolder from another repo into the docs/reponame subfolder of this repo

inputs:
  repository_name:
    required: true
    description: The name of the repository to copy the docs from
  folder_name:
    required: true
    description: The name of the folder to copy the docs to
  github_token:
    required: true
    description: The GitHub token to use to access the repository
  branch:
    required: true
    description: The branch of the repository to copy the docs from   
 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
runs:
  using: "composite"
    # Steps represent a sequence of tasks that will be executed as part of the job
  steps:
    - name: Calculate the target repository name
      env:
        REPOSITORY_NAME: ${{inputs.repository_name}}
        GITHUB_TOKEN: ${{inputs.github_token}}
        FOLDER_NAME: ${{inputs.folder_name}}
        BRANCH: ${{inputs.branch}}
        GITHUB_WORKSPACE: "/home/runner/work"
        GH_TOKEN: ${{inputs.github_token}}
      run: | 
        echo "FOLDER_NAME=$(echo '${{env.REPOSITORY_NAME}}'|cut -d'/' -f 2)" >> $GITHUB_ENV
        echo "Target folder name: ${{env.FOLDER_NAME}}"
        echo "Target repo owner/name: ${{env.REPOSITORY_NAME}}"

        gh auth login --with-token;
        gh repo clone ${{env.REPOSITORY_NAME}} ${{env.GITHUB_WORKSPACE}}/${{env.FOLDER_NAME}} --branch ${{env.BRANCH}};
        gh repo clone justinwritescode/docs ${{env.GITHUB_WORKSPACE}}/docs --branch main;
        gh auth setup-git;

        cd ${{env.GITHUB_WORKSPACE}}/docs;
        git checkout 

        rm -rf ${{env.GITHUB_WORKSPACE}}/docs/${{env.FOLDER_NAME}};
        mkdir -p ${{env.GITHUB_WORKSPACE}}/docs/${{env.FOLDER_NAME}};
        cp -r ${{env.GITHUB_WORKSPACE}}/${{env.FOLDER_NAME}}/docs/* ${{env.GITHUB_WORKSPACE}}/docs/${{env.FOLDER_NAME}};
        
        cd ${{env.GITHUB_WORKSPACE}}/docs/${{env.FOLDER_NAME}};
        git add .;
        git commit -m "CD Deploy of ${{env.FOLDER_NAME}} docs";
        git push;
      shell: bash
